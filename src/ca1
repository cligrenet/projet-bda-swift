       CBL MAP, LIST, SSRANGE
       IDENTIFICATION DIVISION.
       PROGRAM-ID. CA1.
      ************************************************************
      *     SOUS-PROG CA1 : RESTITUTION DES INFOS CLIENT COMPTE  *
      ************************************************************

       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       SPECIAL-NAMES.
           DECIMAL-POINT IS COMMA.

       DATA DIVISION.
       WORKING-STORAGE SECTION.
           EXEC SQL INCLUDE SQLCA     END-EXEC.
           EXEC SQL INCLUDE CLIENT    END-EXEC.
           EXEC SQL INCLUDE COMPTE    END-EXEC.
           EXEC SQL INCLUDE CPTCLI    END-EXEC.

       01 ZCALL-CODE.
          05 ZCALL-ACTION         PIC X.
          05 ZCALL-CODE-RETOUR    PIC 9(2).
             88 ZCALL-OK           VALUE ZEROES.
             88 ZCALL-NON-TROUVE   VALUE 1.
             88 ZCALL-EN-DOUBLE    VALUE 2.
             88 ZCALL-FIN-TABLE    VALUE 3.
             88 ZCALL-ERREUR       VALUE 9.
          05 ZCALL-SQLCODE        PIC +(9)9.

      * AUTO INCREMENT NUMCLI
       01 LAST-NUMCLI        PIC S9(9) COMP VALUE ZEROES.
      * INDICATEUR DE NULLITE
       01 IND-VILLE          PIC S9(4) COMP VALUE ZEROES.
       01 IND-CDPOST         PIC S9(4) COMP VALUE ZEROES.

      * MESSAGES ERREUR, PARAMETRES DSNTIAR
       01 ERR-MSG.
          05 ERR-LONG        PIC S9(4) COMP VALUE +720.
          05 ERR-TXT         PIC X(72) OCCURS 10 TIMES.
       01 ERR-TXT-LONG       PIC S9(9) COMP VALUE 72.
       01 I                  PIC 99.

       LINKAGE SECTION.
           EXEC SQL INCLUDE ZCOMC  END-EXEC.

       PROCEDURE DIVISION USING ZCOM.
           PERFORM DEBUT
           PERFORM TRT
           PERFORM FIN
           .

       DEBUT.
      * RECUPERER LA ZONE DE COM EN WORKING/CLAUSE COPY QUI CONTIENT
      * LES HOST VARIABLES

           INITIALIZE ZCALL-CODE
           INITIALIZE DCLCT-CLIENT
           INITIALIZE DCLCT-COMPTE
           INITIALIZE DCLCT-CPTCLI

           MOVE ZCOM-CODE         TO ZCALL-CODE
           MOVE ZCOM-LIGNE-CLIENT TO DCLCT-CLIENT
           MOVE ZCOM-LIGNE-COMPTE TO DCLCT-COMPTE
           MOVE ZCOM-LIGNE-CPTCLI TO DCLCT-CPTCLI
           .

       TRT.
           EVALUATE ZCALL-ACTION
             WHEN '1'
               PERFORM CRE-CLIENT
             WHEN '2'
               PERFORM CRE-COMPTE
               PERFORM RAJOUT-LIGNE-CPTCLI
             WHEN '3'
               PERFORM CRE-CLIENT
               PERFORM CRE-COMPTE
               PERFORM RAJOUT-LIGNE-CPTCLI
             WHEN '4'
               PERFORM MOD-CLIENT
             WHEN '5'
               PERFORM LEC-CLIENT
             WHEN '6'
               PERFORM LEC-COMPTE
             WHEN OTHER
               SET ZCALL-ERREUR   TO TRUE
               PERFORM FIN-ERR
           END-EVALUATE
           .

       LEC-CLIENT.
      * CONTROLE CLIENT EXISTE
           EXEC SQL
             SELECT NUMCLI,
                    STATUT,
                    NOM000,
                    PRENOM,
                    VILLE,
                    CDPOST,
                    DATENT,
                    DATMAJ
             INTO   :WS-NUMCLI,
                    :WS-STATUT,
                    :WS-NOM000,
                    :WS-PRENOM,
                    :WS-VILLE :IND-VILLE,
                    :WS-CDPOST :IND-CDPOST,
                    :WS-DATENT,
                    :WS-DATMAJ
             FROM ADS0103.CT_CLIENT
             WHERE NUMCLI = :WS-NUMCLI
           END-EXEC

           MOVE SQLCODE TO ZCALL-SQLCODE
           EVALUATE SQLCODE
             WHEN ZEROES
               SET ZCALL-OK           TO TRUE
             WHEN +100
               SET ZCALL-NON-TROUVE   TO TRUE
             WHEN OTHER
               SET ZCALL-ERREUR       TO TRUE
               PERFORM FIN-ERR
           END-EVALUATE
           .

       LEC-COMPTE.
      * CONTROLE COMPTE EXISTE
           EXEC SQL
             SELECT NUMCPT
             INTO   :WS-NUMCPT-CPT
             FROM ADS0103.CT_COMPTE
             WHERE NUMCPT = :WS-NUMCPT-CPT
           END-EXEC

           MOVE SQLCODE TO ZCALL-SQLCODE
           EVALUATE SQLCODE
             WHEN ZEROES
               SET ZCALL-OK           TO TRUE
             WHEN +100
               SET ZCALL-NON-TROUVE   TO TRUE
             WHEN OTHER
               SET ZCALL-ERREUR       TO TRUE
               PERFORM FIN-ERR
           END-EVALUATE
           .

       CRE-CLIENT.
           IF WS-VILLE = SPACES
             MOVE -1 TO IND-VILLE
           END-IF
           IF WS-CDPOST = SPACES
             MOVE -1 TO IND-CDPOST
           END-IF

           EXEC SQL
             SELECT MAX(NUMCLI)
             INTO :LAST-NUMCLI
             FROM ADS0103.CT_CLIENT
           END-EXEC

           COMPUTE WS-NUMCLI = LAST-NUMCLI + 1

           EXEC SQL
             INSERT INTO ADS0103.CT_CLIENT
             VALUES (:WS-NUMCLI,
                     :WS-STATUT,
                     :WS-NOM000,
                     :WS-PRENOM,
                     :WS-VILLE :IND-VILLE,
                     :WS-CDPOST :IND-CDPOST,
                     :WS-DATENT,
                     :WS-DATMAJ)
           END-EXEC

           MOVE SQLCODE TO ZCALL-SQLCODE
           EVALUATE SQLCODE
             WHEN ZEROES
               SET ZCALL-OK          TO TRUE
             WHEN -803
               SET ZCALL-EN-DOUBLE   TO TRUE
             WHEN OTHER
               SET ZCALL-ERREUR      TO TRUE
               PERFORM FIN-ERR
           END-EVALUATE
           .

       CRE-COMPTE.
           EXEC SQL
             INSERT INTO ADS0103.CT_COMPTE
             VALUES (:WS-NUMCPT-CPT,
                     :WS-STATUT-CPT,
                     :WS-SOLDE,
                     :WS-DATOUV-CPT,
                     :WS-DATMAJ-CPT)
           END-EXEC

           MOVE SQLCODE TO ZCALL-SQLCODE
           EVALUATE SQLCODE
             WHEN ZEROES
               SET ZCALL-OK          TO TRUE
             WHEN -803
               SET ZCALL-EN-DOUBLE   TO TRUE
             WHEN OTHER
               SET ZCALL-ERREUR      TO TRUE
               PERFORM FIN-ERR
           END-EVALUATE
           .

       MOD-CLIENT.
           IF WS-VILLE = SPACES
             MOVE -1 TO IND-VILLE
           END-IF
           IF WS-CDPOST = SPACES
             MOVE -1 TO IND-CDPOST
           END-IF

           EXEC SQL
             UPDATE ADS0103.CT_CLIENT
               SET  STATUT    = :WS-STATUT,
                    NOM000    = :WS-NOM000,
                    PRENOM    = :WS-PRENOM,
                    VILLE     = :WS-VILLE   :IND-VILLE,
                    CDPOST    = :WS-CDPOST  :IND-CDPOST,
                    DATENT    = :WS-DATENT,
                    DATMAJ    = :WS-DATMAJ
             WHERE  NUMCLI    = :WS-NUMCLI
           END-EXEC

           MOVE SQLCODE TO ZCALL-SQLCODE
           EVALUATE SQLCODE
             WHEN ZEROES
               SET ZCALL-OK          TO TRUE
             WHEN +100
               SET ZCALL-NON-TROUVE  TO TRUE
             WHEN OTHER
               SET ZCALL-ERREUR      TO TRUE
               PERFORM FIN-ERR
           END-EVALUATE
           .

       RAJOUT-LIGNE-CPTCLI.
           EXEC SQL
             INSERT INTO ADS0103.CT_CPTCLI
             VALUES (:WS-NUMCLI2,
                     :WS-NUMCPT2)
           END-EXEC

           MOVE SQLCODE TO ZCALL-SQLCODE
           EVALUATE SQLCODE
             WHEN ZEROES
               SET ZCALL-OK          TO TRUE
             WHEN -803
               SET ZCALL-EN-DOUBLE   TO TRUE
             WHEN OTHER
               SET ZCALL-ERREUR      TO TRUE
               PERFORM FIN-ERR
           END-EVALUATE
           .

       FIN-ERR.
           DISPLAY 'ERREUR DB2 '
           DISPLAY 'APPEL DSNTIAR '
           CALL 'DSNTIAR' USING SQLCA, ERR-MSG, ERR-TXT-LONG
           PERFORM VARYING I FROM 1 BY 1 UNTIL I > 10
             DISPLAY ERR-TXT(I)
           END-PERFORM
           PERFORM FIN
           .

       FIN.
      * COPIER LA ZONE DE COM DE LA WORKING DANS LA LINKAGE
           MOVE ZCALL-CODE TO ZCOM-CODE

           GOBACK.
